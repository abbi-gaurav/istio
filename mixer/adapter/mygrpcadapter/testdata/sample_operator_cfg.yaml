# handler for adapter mygrpcadapter
apiVersion: "config.istio.io/v1alpha2"
kind: handler
metadata:
  name: h1
  namespace: istio-system
spec:
  adapter: mygrpcadapter
  connection:
    address: "mygrpcadapter:44225"
    #address: "[::]:63592" #replaces at runtime by the test
  params:
    file_path: "out.txt"
---

# instance for template metric
apiVersion: "config.istio.io/v1alpha2"
kind: instance
metadata:
  name: i1metric
  namespace: istio-system
spec:
  template: metric
  params:
    value: request.headers["my-passport"] | "unknown"
    dimensions:
      response_code: "200"
      header_name: toLower("my-passport")
---
apiVersion: "config.istio.io/v1alpha2"
kind: instance
metadata:
  name: i2metric
  namespace: istio-system
spec:
  template: metric
  params:
    value: request.headers["x-b3-traceid"] | "unknown"
    dimensions:
      response_code: "200"
      header_name: toLower("x-b3-traceid")
---
apiVersion: "config.istio.io/v1alpha2"
kind: instance
metadata:
  name: i3metric
  namespace: istio-system
spec:
  template: metric
  params:
    value: source.workload.name | "unknown"
    dimensions:
      response_code: "200"
      header_name: toLower("source.workload.name")
---
# rule to dispatch to handler h1
apiVersion: "config.istio.io/v1alpha2"
kind: rule
metadata:
  name: r1
  namespace: istio-system
spec:
  match: source.workload.name == "istio-ingressgateway" && context.reporter.kind == "outbound" && source.workload.namespace == "istio-system"
  #match: context.reporter.kind == "outbound" && source.labels["istio"] == "ingressgateway"
  actions:
  - handler: h1.istio-system
    instances:
    - i1metric
    - i2metric
    - i3metric
---
